package com.cf.project.controller.sucai;

import com.alibaba.fastjson.JSONObject;
import com.cf.project.Constants;
import com.cf.project.controller.GridController;
import com.cf.project.mybatis.model.CSucai;
import com.cf.project.mybatis.model.SysAuthority;
import com.cf.project.service.sucai.CSucaiService;
import com.cf.util.EntyPage;
import com.cf.util.GridJsonResult;
import com.cf.util.JsonResult;
import com.cf.util.KitFileUtil;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

@Controller
@RequestMapping("/sucai")
public class CSucaiController extends GridController {
    @Autowired
    private CSucaiService cSucaiService;

    
    @ResponseBody
	@RequestMapping("/menu")
	public JsonResult listMenuTree(@RequestParam Map<String, Object> map) {
		JsonResult result = null;
		try {
			result = cSucaiService.findMenuTreeList(map);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
    @ResponseBody
    @RequestMapping("/eshow")
    public JsonResult eshow(@RequestParam Map<String, Object> map) {
    	System.out.println("eshow");
    	System.out.println(map.get("userName"));
    	JsonResult result = null;
    	try {
    		result = cSucaiService.findChildList(map);
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	return result;
    }
    @ResponseBody
    @RequestMapping("/changeName")
    public JsonResult changeName(@RequestParam Map<String, Object> map) {
    	System.out.println(map.get("name"));
    	System.out.println(map.get("id"));
    	JsonResult result = null;
    	try {
    		result = cSucaiService.eidtName(map);
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	return result;
    }
    @ResponseBody
    @RequestMapping("/delete")
    public JsonResult delete(@RequestParam Map<String, Object> map) {
    	System.out.println(map.get("id"));
    	JsonResult result = null;
    	try {
    		result = cSucaiService.delete(map);
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	return result;
    }
    
    @ResponseBody
    @RequestMapping("/uploadVideo")
    //@RequestMapping(value = "/uploadVideo",method = RequestMethod.POST)
    public Object uploadVideo(@RequestParam("layuiVideo") MultipartFile[] layuiFile, HttpServletRequest request, HttpServletResponse response){
       // Log.info("进入wph的layui视频上传接口》》》》》》》》》》》》》》》");
    	
        
        Map<String,Object> map=new HashMap<String,Object>();
        Map<String,Object> map2=new HashMap<String,Object>();
        KitFileUtil kitFileUtil=new KitFileUtil();
        map = kitFileUtil.kitFileUtil(layuiFile, request, response);
        String error = map.get("error").toString();
        if("101".equals(error)){
            map2.put("error",101);
            map2.put("message",map.get("message"));
            return map;
        }
        map2.put("error",0);
        System.out.println(map.get("url"));
        String url[]=(String[])map.get("url");
        map2.put("url",url[0]);
        //视频上传成功写入数据库
     // 获取上传文件的名字
        String fileName = layuiFile[0].getOriginalFilename();
        // 获取长度
        long fileSize = layuiFile[0].getSize();
        String fId = request.getParameter("rId");
        String uploadUser = request.getParameter("uploadUser");
        int level = Integer.parseInt(request.getParameter("level"));
        JsonResult result = create(fId,uploadUser,fileName,fileSize,map2.get("url").toString(),level);
        //System.out.println("result::"+result.getResult());
        return JSONObject.toJSON(map2);
    }
    public JsonResult create(String fId,String uploadUser,String fileName,
    						long fileSize,String url,int level) {
        JsonResult result = new JsonResult();
        CSucai sc = new CSucai();
        sc.setFid(fId);
        sc.setName(fileName);
        sc.setPath(url);
        sc.setSize(fileSize);
        sc.setUploadUser(uploadUser);
        sc.setIsFolder(0);
        sc.setIsShare(0);
        sc.setSharetime(null);
        sc.setShareUser(null);
        sc.setUploadtime(new Date());
        sc.setLevel(level+1);
		try {
			 result = cSucaiService.save(sc);
		} catch (Exception e) {
			result.setResult(Constants.OPERATION_FAIL);
			e.printStackTrace();
		}
		return result;
    }
    
    
  //跳转预览页面
    @RequestMapping("/goLook")
    public Object goLook(HttpServletRequest request, HttpSession session){

        ModelAndView mv = new ModelAndView();
        String classVideo = request.getParameter("classVideo");
        System.out.println(classVideo);
        mv.addObject("kitG", classVideo);
        mv.setViewName("main/sucai/show");
        return mv;
    }
    
	/*
	 * @SuppressWarnings("unchecked")
	 * 
	 * @ResponseBody
	 * 
	 * @RequestMapping("/list") public GridJsonResult listJson(@RequestParam
	 * Map<String, Object> map, EntyPage page) { GridJsonResult result = null; try {
	 * map.put("page",page); List<Map<String,Object>> list =
	 * cSucaiService.findCSucaiList(map).getList(); result = new
	 * GridJsonResult(page); result.setData(list); } catch (Exception e) {
	 * e.printStackTrace(); } return result; }
	 * 
	 * @RequestMapping(value= "/add",method = RequestMethod.GET) public String
	 * add(ModelMap model) { return "main/meetingVerify/add"; }
	 * 
	 * @RequestMapping(value= "/edit",method = RequestMethod.GET) public String
	 * edit(String id, ModelMap model) { try { CSucai pojo =
	 * cSucaiService.findCSucaiListById(id); model.addAttribute("pojo",pojo); }
	 * catch (Exception e) { e.printStackTrace(); } return
	 * "main/meetingVerify/edit"; }
	 * 
	 * @ResponseBody
	 * 
	 * @RequestMapping(value= "/save",method = RequestMethod.POST, consumes =
	 * "application/json") public JsonResult create(@RequestBody CSucai pojo) {
	 * JsonResult result = new JsonResult(); try { result =
	 * cSucaiService.saveOrUpdate(pojo); } catch (Exception e) {
	 * result.setResult(Constants.OPERATION_FAIL); e.printStackTrace(); } return
	 * result; }
	 * 
	 * @ResponseBody
	 * 
	 * @RequestMapping(value= "/del",method = RequestMethod.POST) public JsonResult
	 * del(String id) { JsonResult result = new JsonResult(); try { result =
	 * cSucaiService.del(id); } catch (Exception e) {
	 * result.setResult(Constants.OPERATION_FAIL); e.printStackTrace(); } return
	 * result; }
	 */
}