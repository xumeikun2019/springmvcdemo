package com.cf.project.service.jihua.impl;

import com.cf.project.mybatis.dao.CJihuaMapper;
import com.cf.project.mybatis.model.CJihua;
import com.cf.project.service.jihua.CJihuaService;
import com.cf.project.Constants;
import com.cf.project.annotation.Cache;
import com.cf.project.annotation.CacheClear;
import com.cf.util.DateTimeUtil;
import com.cf.util.EntyPage;
import com.cf.util.JsonListResult;
import com.cf.util.JsonResult;
import java.util.Date;
import java.util.List;
import java.util.Map;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class CJihuaServiceImpl implements CJihuaService {
    @Autowired
    private CJihuaMapper cJihuaMapper;

	/*
	 * @Cache public JsonListResult findCJihuaList(Map<String, Object> map) throws
	 * Exception { List<Map<String,Object>> list = cJihuaMapper.findByHDPage(map);
	 * EntyPage page = (EntyPage) map.get("page"); JsonListResult jsonResult = new
	 * JsonListResult(page,list); return jsonResult; }
	 */

	/*
	 * @Cache public CJihua findCJihuaListById(String id) throws Exception { return
	 * this.cJihuaMapper.selectByPrimaryKey(id); }
	 */

	/*
	 * @CacheClear public JsonResult saveOrUpdate(CJihua pojo) throws Exception {
	 * JsonResult jsonResult = new JsonResult(); if (pojo != null) { String id =
	 * pojo.getId(); int result = 0; Date dateTime =
	 * DateTimeUtil.getFormatDateTime(DateTimeUtil.getCurrDateTimeStr(),
	 * "yyyy-MM-dd HH:mm:ss"); if (StringUtils.isNotBlank(id)) {
	 * pojo.setLastTime(dateTime); result =
	 * cJihuaMapper.updateByPrimaryKeySelective(pojo); } else {
	 * pojo.setAddTime(dateTime); pojo.setLastTime(dateTime); result =
	 * cJihuaMapper.insertSelective(pojo); } if (result == 0) {
	 * jsonResult.setResult(Constants.OPERATION_FAIL); } } return jsonResult; }
	 */

	/*
	 * @CacheClear public JsonResult update(CJihua pojo) throws Exception {
	 * JsonResult jsonResult = new JsonResult(); Date dateTime =
	 * DateTimeUtil.getFormatDateTime(DateTimeUtil.getCurrDateTimeStr(),
	 * "yyyy-MM-dd HH:mm:ss"); pojo.setLastTime(dateTime); int result =
	 * cJihuaMapper.updateByPrimaryKeySelective(pojo); if (result == 0) {
	 * jsonResult.setResult(Constants.OPERATION_FAIL); } return jsonResult; }
	 */

	/*
	 * @CacheClear public JsonResult del(String id) throws Exception { JsonResult
	 * jsonResult = new JsonResult(); int result = 0; if
	 * (StringUtils.contains(id,",")) { String[] idsArr = id.split(","); if
	 * (idsArr.length > 0) { for (String idArr : idsArr) { result =
	 * cJihuaMapper.deleteByPrimaryKey(idArr); if (result == 0) { break; } } } }
	 * else { result = cJihuaMapper.deleteByPrimaryKey(id); } if (result == 0) {
	 * jsonResult.setResult(Constants.OPERATION_FAIL); } return jsonResult; }
	 */
}