package com.cf.project.controller.sucai;

import com.alibaba.fastjson.JSONObject;
import com.cf.project.Constants;
import com.cf.project.controller.GridController;
import com.cf.project.mybatis.model.CSucai;
import com.cf.project.service.sucai.CSucaiService;
import com.cf.util.Doc2Html;
import com.cf.util.Docx2Html;
import com.cf.util.EntyPage;
import com.cf.util.GridJsonResult;
import com.cf.util.JsonResult;
import com.cf.util.KitFileUtil;
import com.cf.util.POIReadExcelToHtml;
import com.cf.util.PptToJpg_poi;
import com.cf.util.wordtohtmlTest;

import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.xml.transform.TransformerException;

import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.rendering.PDFRenderer;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

@Controller
@RequestMapping("/sucai")
public class CSucaiController extends GridController {
    @Autowired
    private CSucaiService cSucaiService;

    
    @ResponseBody
	@RequestMapping("/menu")
	public JsonResult listMenuTree(@RequestParam Map<String, Object> map) {
		JsonResult result = null;
		try {
			result = cSucaiService.findMenuTreeList(map);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return result;
	}
    @ResponseBody
    @RequestMapping("/eshow")
    public JsonResult eshow(@RequestParam Map<String, Object> map) {
    	System.out.println("eshow");
    	System.out.println(map.get("userName"));
    	JsonResult result = null;
    	try {
    		result = cSucaiService.findChildList(map);
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	return result;
    }
    @ResponseBody
    @RequestMapping("/getSucaiList")
    public JsonResult getSucaiList(@RequestParam Map<String, Object> map) {
    	JsonResult result = null;
    	try {
    		result = cSucaiService.getSucaiList(map);
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	return result;
    }
    @ResponseBody
    @RequestMapping("/changeName")
    public JsonResult changeName(@RequestParam Map<String, Object> map) {
    	System.out.println(map.get("name"));
    	System.out.println(map.get("id"));
    	JsonResult result = null;
    	try {
    		result = cSucaiService.eidtName(map);
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	return result;
    }
    @ResponseBody
    @RequestMapping("/delete")
    public JsonResult delete(@RequestParam Map<String, Object> map) {
    	System.out.println(map.get("id"));
    	JsonResult result = null;
    	try {
    		result = cSucaiService.delete(map);
    	} catch (Exception e) {
    		e.printStackTrace();
    	}
    	return result;
    }
    
    @ResponseBody
    @RequestMapping("/uploadFile")
    //@RequestMapping(value = "/uploadVideo",method = RequestMethod.POST)
    public Object uploadFlie(@RequestParam("layuiFile") MultipartFile[] layuiFile, HttpServletRequest request, HttpServletResponse response){
       // Log.info("进入wph的layui视频上传接口》》》》》》》》》》》》》》》");
    	Map<String,Object> map=new HashMap<String,Object>();
    	Map<String,Object> map2=new HashMap<String,Object>();
    	// 获取上传文件的名字
    	String fileName = layuiFile[0].getOriginalFilename();
    	String fileName_font = fileName.substring(0, fileName.lastIndexOf("."));
    	System.out.println(fileName_font);
    	if(fileName_font.contains(",")||fileName_font.contains(".")) {
    		System.out.println("error!!!");
    		 map2.put("error",1);
    		 map2.put("message","文件名称中不能包含特殊符号！");
             return map2;
    	}
        
        KitFileUtil kitFileUtil=new KitFileUtil();
        map = kitFileUtil.kitFileUtil(layuiFile, request, response);
        String error = map.get("error").toString();
        if("101".equals(error)){
            map2.put("error",101);
            map2.put("message",map.get("message"));
            return map;
        }
        map2.put("error",0);
        System.out.println(map.get("url"));
        String url[]=(String[])map.get("url");
        map2.put("url",url[0]);
        //视频上传成功写入数据库
        
        // 获取长度
        long fileSize = layuiFile[0].getSize();
        String fId = request.getParameter("rId");
        String uploadUser = request.getParameter("uploadUser");
        int level = Integer.parseInt("2");
        System.out.println("数据保存："+map2.get("url").toString());
       
        //文件转格式
        String base = request.getSession().getServletContext().getRealPath("");
    	System.out.println("base:"+base);
    	String path = map2.get("url").toString();
    	path = path.substring(1,path.length());
    	path = path.substring(path.indexOf("/"),path.length());
        String uploadType = request.getParameter("uploadType");
        System.out.println("uploadType:"+uploadType);
        String switchPath = "";
        if(uploadType.equals("excel")) {
        	excel2html(request, response, base+path);
        	switchPath = map2.get("url").toString().split("\\.")[0]+".html";
        }else if(uploadType.equals("word")) {
        	try {
        		
        		switchPath = map2.get("url").toString().split("\\.")[0]+".html";
        		String sp = switchPath.substring(1,switchPath.length());
            	sp = sp.substring(sp.indexOf("/"),sp.length());
        		System.out.println("in:"+base+path);
        		System.out.println("out:"+base+sp);
        		wordtohtmlTest.wordToHtml(base+path, base+sp);
        		
				//word2html(request, response, base+path);
			} catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }else if(uploadType.equals("pdf")) {
        	switchPath = pdf2png(request, response,base+path,map2.get("url").toString());
        }else if(uploadType.equals("ppt")) {
        	
            
        	//switchPath = PptToJpg_poi.doPPT2003toImage(request, response,base+path,map2.get("url").toString());
        	switchPath = ppt2img(request, response, base+path,map2.get("url").toString());
        }
        System.out.println("switch::"+switchPath);
        JsonResult result = create(fId,uploadUser,fileName,fileSize,map2.get("url").toString(),level,switchPath);
        return JSONObject.toJSON(map2);
    }
    public JsonResult create(String fId,String uploadUser,String fileName,
    						long fileSize,String url,int level,String switchPath) {
        JsonResult result = new JsonResult();
        CSucai sc = new CSucai();
        sc.setFid(fId);
        sc.setName(fileName);
        sc.setPath(url);
        sc.setSwitchpath(switchPath);
        sc.setSize(fileSize);
        sc.setUploadUser(uploadUser);
        sc.setIsFolder(0);
        sc.setIsShare(0);
        sc.setSharetime(null);
        sc.setShareUser(null);
        sc.setUploadtime(new Date());
        sc.setLevel(level+1);
		try {
			 result = cSucaiService.save(sc);
		} catch (Exception e) {
			result.setResult(Constants.OPERATION_FAIL);
			e.printStackTrace();
		}
		return result;
    }
    
    
  //跳转预览页面
    @RequestMapping("/goLook")
    public Object goLook(HttpServletRequest request, HttpSession session){

        ModelAndView mv = new ModelAndView();
        String classVideo = request.getParameter("classVideo");
        String type = request.getParameter("type");
        System.out.println(classVideo);
        mv.addObject("kitG", classVideo);
        mv.addObject("type", type);
        mv.setViewName("main/sucai/show");
        return mv;
    }
    
	
    
    
    
    
    
    public void excel2html(HttpServletRequest request,HttpServletResponse response,
            String path){
    	
        //System.out.println(fileName);
        if(path!=null){
        	System.out.println("全路径：："+path);
            //excel名字
            String excle=path;
            //转换
            String fileType = excle.substring(excle.lastIndexOf(".")+1);
            System.out.println(fileType);
            if("xls".equalsIgnoreCase(fileType)||"xlsx".equalsIgnoreCase(fileType)||"xlsm".equalsIgnoreCase(fileType)){
                //读取显示
                //以下是读取excel
            	path=path.substring(0,path.lastIndexOf("."))+".html";
                System.out.println("");
                //判断是否已经转换过
                if(!new File(path).exists()){
                    new POIReadExcelToHtml().pdf2html(excle);
                }
                
                System.out.println(path);

            }
        }
    }
    public void word2html(HttpServletRequest request,HttpServletResponse response,
    		String path) throws Exception{
    	String[] p = path.split("/");
    	String inFileName = p[p.length-1];
    	
    	String ioPath = path.substring(0,path.length()-inFileName.length());
		String outFileName = inFileName.split("\\.")[0]+".html";
		
		System.out.println("原文件名："+inFileName);
		System.out.println("文件路径:"+ioPath);
		System.out.println("输出文件名:"+outFileName);
    	if(inFileName.endsWith(".docx") || inFileName.endsWith(".DOCX")){
			//07
			Docx2Html.convertDocxToHtml(ioPath, inFileName, ioPath, outFileName);
		}else{
			//03
			Doc2Html.convertDocToHtml(ioPath, inFileName, ioPath, outFileName);
		}
    }
  
    
    /**
     * 转换全部的ppt
     * @param fileAddress 文件地址
     * @param filename PDF文件名
     * @param type 图片类型
     */
    public  String ppt2img(HttpServletRequest request,HttpServletResponse response,String path,String oldpath) {
    	// 将pdf装图片 并且自定义图片得格式大小
    	
    	String[] p = path.split("/");
    	String name = p[p.length-1];//pdf.pdf
    	String nname = name.split("\\.")[0];//不带后缀名字 pdf
    	
    	path = path.substring(0,path.length()-name.length());///D://work/../../../finance/excel/20191104/
    	
    	System.out.println("原文件名："+name);
    	System.out.println("文件路径(无文件名):"+path);
    	System.out.println("无后缀文件名:"+nname);
    	System.out.println("oldpath:"+oldpath);
    	File pptFile = new File(path+name);
    	File imgFile = new File(path);
    	
    	oldpath=oldpath.split("\\.")[0];
    	System.out.println("oldpath:"+oldpath);
    	String switchpath = PptToJpg_poi.doPPT2003toImage(pptFile, imgFile,oldpath,nname);
    	
    	
    	return switchpath.substring(0,switchpath.length()-1);
    }
    /**
     * 转换全部的pdf
     * @param fileAddress 文件地址
     * @param filename PDF文件名
     * @param type 图片类型
     */
    public  String pdf2png(HttpServletRequest request,HttpServletResponse response,String path,String oldpath) {
        // 将pdf装图片 并且自定义图片得格式大小
    	
    	String[] p = path.split("/");
    	String name = p[p.length-1];//pdf.pdf
    	String nname = name.split("\\.")[0];//不带后缀名字 pdf
    	
    	path = path.substring(0,path.length()-name.length());///D://work/../../../finance/excel/20191104/
		
		System.out.println("原文件名："+name);
		System.out.println("文件路径(无文件名):"+path);
		System.out.println("无后缀文件名:"+nname);
    	File file = new File(path+name);
    	PDDocument doc = null;
    	String switchpath = "";
    	try {
        	doc = PDDocument.load(file);
            PDFRenderer renderer = new PDFRenderer(doc);
            int pageCount = doc.getNumberOfPages();
            for (int i = 0; i < pageCount; i++) {
                BufferedImage image = renderer.renderImageWithDPI(i, 144); // Windows native DPI
                String pp = path+"/"+nname+"_"+(i+1)+".png";
                switchpath+=(oldpath.substring(0,oldpath.lastIndexOf("/")+1))+nname+"_"+(i+1)+".png"+",";
                ImageIO.write(image, "png", new File(pp));
            }
           
            System.out.println(switchpath);
        } catch (IOException e) {
        	  e.printStackTrace();
            }finally{
            	if(doc!=null) {
            		try {
						doc.close();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
            	
            }
        }
    	 return switchpath.substring(0,switchpath.length()-1);
    }
  

    /**
     * 转换全部的pdf
     * @param fileAddress 文件地址
     * @param filename PDF文件名
     * @param type 图片类型
     */
    @RequestMapping(value="/pdf2png")
    public static void pdf2png(HttpServletRequest request,HttpServletResponse response) {
        // 将pdf装图片 并且自定义图片得格式大小
        //File file = new File(fileAddress+"\\"+filename+".pdf");
    	String path = request.getSession().getServletContext().getRealPath("")+"pdf/20191102/";
    	String name = "20191102104823_13.pdf";
    	File file = new File(path+name);
        try {
            PDDocument doc = PDDocument.load(file);
            PDFRenderer renderer = new PDFRenderer(doc);
            int pageCount = doc.getNumberOfPages();
            for (int i = 0; i < pageCount; i++) {
                BufferedImage image = renderer.renderImageWithDPI(i, 144); // Windows native DPI
                // BufferedImage srcImage = resize(image, 240, 240);//产生缩略图
                ImageIO.write(image, "png", new File(path+"\\test_"+(i+1)+".png"));
//                ImageIO.write(image, type, new File(fileAddress+"\\"+filename+"_"+(i+1)+"."+type));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    @RequestMapping(value="/ppt2image")
    public static void ppt2image(HttpServletRequest request,HttpServletResponse response) throws IOException {
    	
    }
    
    
    public static void main(String[] args) throws IOException {
//    	File in = new File("D:\\work\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\finance\\ppt\\20191105\\ppt.pptx");
//        File out = new File("D:\\work\\.metadata\\.plugins\\org.eclipse.wst.server.core\\tmp0\\wtpwebapps\\finance\\ppt\\20191105\\pdf.pdf");
//        System.out.println(0);
//    	PPT_2_PDF_Util.ppt2PDF(in, out);
    		
    }
    
    
    
}