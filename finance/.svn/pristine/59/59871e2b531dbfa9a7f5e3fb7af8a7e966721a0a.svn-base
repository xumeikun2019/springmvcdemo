<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.cf.project.mybatis.dao.CMeetingOrderMapper">
	<resultMap id="BaseResultMap"
		type="com.cf.project.mybatis.model.CMeetingOrder">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="order_dept_id" jdbcType="VARCHAR"
			property="orderDeptId" />
		<result column="order_user_id" jdbcType="VARCHAR"
			property="orderUserId" />
		<result column="order_place_id" jdbcType="VARCHAR"
			property="orderPlaceId" />
		<result column="meeting_name" jdbcType="VARCHAR"
			property="meetingName" />
		<result column="time_start" jdbcType="VARCHAR"
			property="timeStart" />
		<result column="time_end" jdbcType="VARCHAR" property="timeEnd" />
		<result column="meeting_step" jdbcType="VARCHAR"
			property="meetingStep" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="state" jdbcType="VARCHAR" property="state" />
		<result column="add_time" jdbcType="TIMESTAMP"
			property="addTime" />
		<result column="last_time" jdbcType="TIMESTAMP"
			property="lastTime" />
		<result column="audit_type" jdbcType="VARCHAR"
			property="auditType" />
		<result column="remind_time" jdbcType="VARCHAR"
			property="remindTime" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, order_dept_id, order_user_id, order_place_id, meeting_name,
		time_start, time_end,
		meeting_step, remark, user_id, state, add_time, last_time, audit_type, remind_time
	</sql>
	<select id="selectByExample"
		parameterType="com.cf.project.mybatis.model.CMeetingOrderExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from c_meeting_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT a.id,b.name order_dept_id,c.name
		order_place_id,a.meeting_name,a.time_start,a.time_end,a.meeting_step,a.remark,a.user_id,a.audit_type,a.remind_time
		from c_meeting_order a
		LEFT JOIN sys_department b on a.order_dept_id=b.id
		LEFT JOIN c_place c on a.order_place_id=c.id
		where a.id = #{id,jdbcType=VARCHAR} and a.state='T'
	</select>
	<select id="view" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		SELECT a.id,b.name order_dept_id,c.name
		order_place_id,a.meeting_name,a.time_start,a.time_end,a.remark,a.user_id,a.audit_type,a.remind_time,d.remark
		state,
		case when a.meeting_step='1' then '部门领导未审核' when a.meeting_step='2' then
		'会议室管理员未审核' when a.meeting_step='3' then '审核通过' when
		a.meeting_step='0' then '审核未通过' end meeting_step
		from c_meeting_order a
		LEFT JOIN sys_department b on a.order_dept_id=b.id
		LEFT JOIN c_place c on a.order_place_id=c.id
		LEFT JOIN c_meeting_verify d on a.id=d.meeting_id
		where a.id = #{id,jdbcType=VARCHAR} and a.state='T'
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from c_meeting_order
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.cf.project.mybatis.model.CMeetingOrderExample">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from c_meeting_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.cf.project.mybatis.model.CMeetingOrder">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="BEFORE"
			resultType="java.lang.String">
			select replace(uuid(),'-','') uuid from dual
		</selectKey>
		insert into c_meeting_order (id, order_dept_id, order_user_id,
		order_place_id, meeting_name, time_start,
		time_end, meeting_step, remark,
		user_id, state, add_time,
		last_time, audit_type, remind_time
		)
		values (#{id,jdbcType=VARCHAR}, #{orderDeptId,jdbcType=VARCHAR},
		#{orderUserId,jdbcType=VARCHAR},
		#{orderPlaceId,jdbcType=VARCHAR}, #{meetingName,jdbcType=VARCHAR}, #{timeStart,jdbcType=VARCHAR},
		#{timeEnd,jdbcType=VARCHAR}, #{meetingStep,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{userId,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP},
		#{lastTime,jdbcType=TIMESTAMP}, #{auditType,jdbcType=VARCHAR},
		#{remindTime,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.cf.project.mybatis.model.CMeetingOrder">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<selectKey keyProperty="id" order="BEFORE"
			resultType="java.lang.String">
			select replace(uuid(),'-','') uuid from dual
		</selectKey>
		insert into c_meeting_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,
			<if test="orderDeptId != null">
				order_dept_id,
			</if>
			<if test="orderUserId != null">
				order_user_id,
			</if>
			<if test="orderPlaceId != null">
				order_place_id,
			</if>
			<if test="meetingName != null">
				meeting_name,
			</if>
			<if test="timeStart != null">
				time_start,
			</if>
			<if test="timeEnd != null">
				time_end,
			</if>
			<if test="meetingStep != null">
				meeting_step,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="lastTime != null">
				last_time,
			</if>
			<if test="auditType != null">
				audit_type,
			</if>
			<if test="remindTime != null">
				remind_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{id,jdbcType=VARCHAR},
			<if test="orderDeptId != null">
				#{orderDeptId,jdbcType=VARCHAR},
			</if>
			<if test="orderUserId != null">
				#{orderUserId,jdbcType=VARCHAR},
			</if>
			<if test="orderPlaceId != null">
				#{orderPlaceId,jdbcType=VARCHAR},
			</if>
			<if test="meetingName != null">
				#{meetingName,jdbcType=VARCHAR},
			</if>
			<if test="timeStart != null">
				#{timeStart,jdbcType=VARCHAR},
			</if>
			<if test="timeEnd != null">
				#{timeEnd,jdbcType=VARCHAR},
			</if>
			<if test="meetingStep != null">
				#{meetingStep,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastTime != null">
				#{lastTime,jdbcType=TIMESTAMP},
			</if>
			<if test="auditType != null">
				#{auditType,jdbcType=VARCHAR},
			</if>
			<if test="remindTime != null">
				#{remindTime,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.cf.project.mybatis.model.CMeetingOrderExample"
		resultType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select count(*) from c_meeting_order
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update c_meeting_order
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=VARCHAR},
			</if>
			<if test="record.orderDeptId != null">
				order_dept_id = #{record.orderDeptId,jdbcType=VARCHAR},
			</if>
			<if test="record.orderUserId != null">
				order_user_id = #{record.orderUserId,jdbcType=VARCHAR},
			</if>
			<if test="record.orderPlaceId != null">
				order_place_id = #{record.orderPlaceId,jdbcType=VARCHAR},
			</if>
			<if test="record.meetingName != null">
				meeting_name = #{record.meetingName,jdbcType=VARCHAR},
			</if>
			<if test="record.timeStart != null">
				time_start = #{record.timeStart,jdbcType=VARCHAR},
			</if>
			<if test="record.timeEnd != null">
				time_end = #{record.timeEnd,jdbcType=VARCHAR},
			</if>
			<if test="record.meetingStep != null">
				meeting_step = #{record.meetingStep,jdbcType=VARCHAR},
			</if>
			<if test="record.remark != null">
				remark = #{record.remark,jdbcType=VARCHAR},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=VARCHAR},
			</if>
			<if test="record.addTime != null">
				add_time = #{record.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.lastTime != null">
				last_time = #{record.lastTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.auditType != null">
				audit_type = #{record.auditType,jdbcType=VARCHAR},
			</if>
			<if test="record.remindTime != null">
				remind_time = #{record.remindTime,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update c_meeting_order
		set id = #{record.id,jdbcType=VARCHAR},
		order_dept_id = #{record.orderDeptId,jdbcType=VARCHAR},
		order_user_id = #{record.orderUserId,jdbcType=VARCHAR},
		order_place_id = #{record.orderPlaceId,jdbcType=VARCHAR},
		meeting_name = #{record.meetingName,jdbcType=VARCHAR},
		time_start = #{record.timeStart,jdbcType=VARCHAR},
		time_end = #{record.timeEnd,jdbcType=VARCHAR},
		meeting_step = #{record.meetingStep,jdbcType=VARCHAR},
		remark = #{record.remark,jdbcType=VARCHAR},
		user_id = #{record.userId,jdbcType=VARCHAR},
		state = #{record.state,jdbcType=VARCHAR},
		add_time = #{record.addTime,jdbcType=TIMESTAMP},
		last_time = #{record.lastTime,jdbcType=TIMESTAMP},
		audit_type = #{record.auditType,jdbcType=VARCHAR},
		remind_time = #{record.remindTime,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.cf.project.mybatis.model.CMeetingOrder">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update c_meeting_order
		<set>
			<if test="orderDeptId != null">
				order_dept_id = #{orderDeptId,jdbcType=VARCHAR},
			</if>
			<if test="orderUserId != null">
				order_user_id = #{orderUserId,jdbcType=VARCHAR},
			</if>
			<if test="orderPlaceId != null">
				order_place_id = #{orderPlaceId,jdbcType=VARCHAR},
			</if>
			<if test="meetingName != null">
				meeting_name = #{meetingName,jdbcType=VARCHAR},
			</if>
			<if test="timeStart != null">
				time_start = #{timeStart,jdbcType=VARCHAR},
			</if>
			<if test="timeEnd != null">
				time_end = #{timeEnd,jdbcType=VARCHAR},
			</if>
			<if test="meetingStep != null">
				meeting_step = #{meetingStep,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastTime != null">
				last_time = #{lastTime,jdbcType=TIMESTAMP},
			</if>
			<if test="auditType != null">
				audit_type = #{auditType,jdbcType=VARCHAR},
			</if>
			<if test="remindTime != null">
				remind_time = #{remindTime,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.cf.project.mybatis.model.CMeetingOrder">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update c_meeting_order
		set order_dept_id = #{orderDeptId,jdbcType=VARCHAR},
		order_user_id = #{orderUserId,jdbcType=VARCHAR},
		order_place_id = #{orderPlaceId,jdbcType=VARCHAR},
		meeting_name = #{meetingName,jdbcType=VARCHAR},
		time_start = #{timeStart,jdbcType=VARCHAR},
		time_end = #{timeEnd,jdbcType=VARCHAR},
		meeting_step = #{meetingStep,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR},
		add_time = #{addTime,jdbcType=TIMESTAMP},
		last_time = #{lastTime,jdbcType=TIMESTAMP},
		audit_type = #{auditType,jdbcType=VARCHAR},
		remind_time = #{remindTime,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="findByHDPage" resultType="java.util.HashMap">
		select c_meeting_order.id as id,
		sys_department.name as departmentName,
		c_place.name as placeName,
		c_user.realname as sysName,
		user_id as users,
		meeting_name as meetingName,
		time_start as timeStart,
		time_end as timeEnd,
		c_meeting_order.audit_type as auditType,
		c_meeting_order.remark as remark,
		case when c_meeting_order.meeting_step='1' then '部门领导未审核' when
		c_meeting_order.meeting_step='2' then '会议室管理员未审核' when
		c_meeting_order.meeting_step='3' then '审核通过' when
		c_meeting_order.meeting_step='0' then '审核未通过' end zt
		from c_meeting_order
		left join c_user on c_user.id = c_meeting_order.order_user_id
		left join sys_department on sys_department.id =
		c_meeting_order.order_dept_id
		left join c_place on c_place.id = c_meeting_order.order_place_id
		where c_meeting_order.state='T'
		<if test="nameId != null and nameId != ''">
			and c_meeting_order.order_user_id = #{nameId}
		</if>
		<if test="placeName != null and placeName != ''">
			and c_place.name like concat('%',#{placeName},'%')
		</if>

		<if test="sysName != null and sysName != ''">
			and order_user_id = #{sysName}
		</if>
		GROUP BY c_meeting_order.id
		ORDER BY c_meeting_order.last_time desc
	</select>
	<!-- 部门管理员审批会议室列表 -->
	<select id="findBybmHDPage" resultType="java.util.HashMap">
		select c_meeting_order.id as id,
		sys_department.name as departmentName,
		c_place.name as placeName,
		c_user.realname as sysName,
		c_meeting_order.user_id as users,
		meeting_name as meetingName,
		time_start as timeStart,
		time_end as timeEnd,
		c_meeting_order.audit_type as auditType,
		c_meeting_order.remark as remark,meeting_step,'bm' role_id
		from c_meeting_order
		left join c_user on c_user.id = c_meeting_order.order_user_id
		left join sys_department on sys_department.id =
		c_meeting_order.order_dept_id
		left join c_place on c_place.id = c_meeting_order.order_place_id
		left join sys_department_user on
		sys_department_user.department_id=c_meeting_order.order_dept_id
		where audit_type='manual'
		and c_meeting_order.state='T'
		<if test="placeName != null and placeName != ''">
			and c_place.name like concat('%',#{placeName},'%')
		</if>
		<if test="nameId != null and nameId != ''">
			and sys_department_user.user_id = #{nameId}
		</if>
		<if test="sysName != null and sysName != ''">
			and order_user_id = #{sysName}
		</if>
		AND meeting_step = '1' OR meeting_step = '2'
		GROUP BY c_meeting_order.id
		ORDER BY c_meeting_order.last_time desc
	</select>
	<!-- 会议室管理员审批会议室列表 -->
	<select id="findByhfHDPage" resultType="java.util.HashMap">
		select c_meeting_order.id as id,
		sys_department.name as departmentName,
		c_place.name as placeName,
		c_user.realname as sysName,
		user_id as users,
		meeting_name as meetingName,
		time_start as timeStart,
		time_end as timeEnd,
		c_meeting_order.audit_type as auditType,
		c_meeting_order.remark as remark,meeting_step,'hys' role_id
		from c_meeting_order
		left join c_user on c_user.id = c_meeting_order.order_user_id
		left join sys_department on sys_department.id =
		c_meeting_order.order_dept_id
		left join c_place on c_place.id = c_meeting_order.order_place_id
		where audit_type='manual'
		and c_meeting_order.state='T'
		<if test="placeName != null and placeName != ''">
			and c_place.name like concat('%',#{placeName},'%')
		</if>

		<if test="sysName != null and sysName != ''">
			and order_user_id = #{sysName}
		</if>
		and meeting_step = '2' or meeting_step ='3'
		ORDER BY c_meeting_order.last_time desc
	</select>
	<!-- 查询人员权限 -->
	<select id="findqx" parameterType="map"
		resultType="java.util.HashMap">
		select * from sys_user_role a LEFT JOIN c_user b on a.user_id=b.id where
		a.user_id=#{nameId} and b.dept='1'
	</select>
	<!-- 查询预约时间是否重复 -->
	<select id="findtime" parameterType="map"
		resultType="java.util.HashMap">
		select * from c_meeting_order where time_start <![CDATA[   <=  ]]>
		#{timeEnd} and time_end <![CDATA[   >=  ]]>
		#{timeEnd}
		and time_start <![CDATA[   <=  ]]>
		#{timeStart} and time_end <![CDATA[   >=  ]]>
		#{timeStart} and order_place_id=#{orderPlaceId} and state='T' and
		meeting_step!='0'
	</select>
	<!-- 审核通过修改状态 -->
	<update id="updatezt" parameterType="map">
		update c_meeting_order
		set meeting_step = #{zt,jdbcType=VARCHAR} where id=#{id,jdbcType=VARCHAR}
	</update>
	<!-- 取消预约 -->
	<update id="qx" parameterType="map">
		update c_meeting_order
		set state = 'F' where id=#{id,jdbcType=VARCHAR}
	</update>
 	<!-- 根据设备id和当前时间查询会议室 -->
	<select id="findCdeviceCmeetingOrder" resultType="java.util.HashMap">
		 select b.id deviceId,
		 		b.mac macId, 
		 		a.id placeId, 
		 		c.id meetId,
		 		a.name placeName, 
		 		c.meeting_name meetingName, 
		 		c.state, 
		 		c.time_start timeStart,
		 		c.time_end timeEnd 
		 	from c_place a 
				left join c_device b on a.id = b.place_id
				left join c_meeting_order c on b.place_id = c.order_place_id 
				and c.time_start &lt;= #{dataTime} and c.time_end &gt;= #{dataTime} and c.state='T'
			where b.mac = #{deviceId}
	</select>
	<!-- 根据设备 id 查询其对应的会议室  并查询会议室下有哪些会议 -->
	<select id="cdeviceCplaceCmeetingOrderHDPage"  resultType="java.util.HashMap">
		select aa.deviceId,
		 	   bb.id orderId ,
			   aa.macId,
			   aa.name placeName,
			   bb.meeting_name meetingName,
			   bb.time_start dataTime,
			   bb.time_end dataTimeEnd,
			   DATE_FORMAT(bb.time_start,'%H:%i') timeStart,
			   DATE_FORMAT(bb.time_end,'%H:%i') timeEnd, 
			   bb.state from 
						(select b.mac macId , b.id deviceId , a.id placeId , a.name from c_place a right JOIN c_device b on a.id = b.place_id) aa 

			join c_meeting_order bb on aa.placeId = bb.order_place_id
		<where>
			<if test="deviceId != null and deviceId !=''">
				and aa.macId = #{deviceId} and bb.state = "T" order by bb.time_start desc
			</if>
		</where> 
	</select>
	<!-- 当前人员的会议提醒 -->
	<select id="findhytx" parameterType="map" resultType="java.util.HashMap">
        select a.meeting_name,a.time_start,a.time_end,b.user,c.name from c_meeting_order a LEFT JOIN c_meeting_user b on a.id=b.meeting LEFT JOIN c_place c on a.order_place_id=c.id 
        where b.user=#{userid} and a.time_end <![CDATA[   >=  ]]>#{sj} and a.state!='E'
	</select>
	<!-- 当前人员的会议提醒(更多) -->
	<select id="findmoreByHDPage" resultType="java.util.HashMap">
		 select a.id,a.meeting_name,a.time_start,a.time_end,b.user,c.name from c_meeting_order a LEFT JOIN c_meeting_user b on a.id=b.meeting LEFT JOIN c_place c on a.order_place_id=c.id 
        where b.user=#{userid} and a.state!='E' order by a.last_time
	</select>
	<!-- 当前人员的待办事项 -->
	<select id="finddbsx" parameterType="map" resultType="java.util.HashMap">
		SELECT aa.* from (select c_meeting_order.id as id,
		'会议室申请' name,
		c_user.realname as sysName,
		meeting_name as meetingName,
		date_format(c_meeting_order.add_time,'%Y-%m-%d %H:%m:%s') add_time 
		from c_meeting_order
		left join c_user on c_user.id = c_meeting_order.order_user_id
		left join sys_department on sys_department.id =
		c_meeting_order.order_dept_id
		left join c_place on c_place.id = c_meeting_order.order_place_id
		left join sys_department_user on
		sys_department_user.department_id=c_meeting_order.order_dept_id
		where audit_type='manual'
		and c_meeting_order.state='T'
		and sys_department_user.user_id = #{userid}
		AND meeting_step = '1' OR meeting_step = '2'
		GROUP BY c_meeting_order.id
		ORDER BY c_meeting_order.last_time desc) aa
		union 
		SELECT bb.* from (select a.id,'访客申请' name,GROUP_CONCAT(b.user_name) sysName,a.matter as meetingName, date_format(a.add_time,'%Y-%m-%d %H:%m:%s') add_time
		from c_visitor a LEFT JOIN c_visitor_user b on a.id=b.visitor_id
		where a.user_id=#{userid} and a.state='E' 
		GROUP BY a.id) bb 
	</select>
	<!-- 当前人员的待办事项(更多) -->
	<select id="finddbsxmoreByHDPage" resultType="java.util.HashMap">
		SELECT aa.* from (select c_meeting_order.id as id,
		'会议室申请' name,
		c_user.realname as sysName,
		meeting_name as meetingName,
		date_format(c_meeting_order.add_time,'%Y-%m-%d %H:%m:%s') add_time 
		from c_meeting_order
		left join c_user on c_user.id = c_meeting_order.order_user_id
		left join sys_department on sys_department.id =
		c_meeting_order.order_dept_id
		left join c_place on c_place.id = c_meeting_order.order_place_id
		left join sys_department_user on
		sys_department_user.department_id=c_meeting_order.order_dept_id
		where audit_type='manual'
		and c_meeting_order.state='T'
		and sys_department_user.user_id = #{userid}
		AND meeting_step = '1' OR meeting_step = '2'
		GROUP BY c_meeting_order.id
		ORDER BY c_meeting_order.last_time desc) aa
		union 
		SELECT bb.* from (select a.id,'访客申请' name,GROUP_CONCAT(b.user_name) sysName,a.matter as meetingName, date_format(a.add_time,'%Y-%m-%d %H:%m:%s') add_time
		from c_visitor a LEFT JOIN c_visitor_user b on a.id=b.visitor_id
		where a.user_id=#{userid} and a.state='E' 
		GROUP BY a.id) bb 
	</select>
</mapper>