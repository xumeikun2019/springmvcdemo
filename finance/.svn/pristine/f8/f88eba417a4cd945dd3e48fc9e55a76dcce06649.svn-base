<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cf.project.mybatis.dao.CUserMapper">
  <resultMap id="BaseResultMap" type="com.cf.project.mybatis.model.CUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="dept" jdbcType="VARCHAR" property="dept" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="work_type" jdbcType="VARCHAR" property="workType" />
    <result column="work_date" jdbcType="DATE" property="workDate" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime"/>
  </resultMap>
  
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, username, password, state, realname, dept, point,idcard, phone,work_type,DATE_FORMAT(work_date,'%Y-%m-%d') strWorkDate,  remark, add_time, last_time
  </sql>
  
  
  
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <select id="selectByExample" parameterType="com.cf.project.mybatis.model.CUserExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from c_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from c_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cf.project.mybatis.model.CUserExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from c_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cf.project.mybatis.model.CUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') uuid from dual
    </selectKey>
    insert into c_user (id, username, password, idcard, phone, work_type, work_date,
      state, realname, dept, 
      remark, updateTime)
    values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{dept,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR},#{workType,jdbcType=VARCHAR},#{workDate,jdbcType=DATE},#{remark,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.cf.project.mybatis.model.CUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') uuid from dual
    </selectKey>
    insert into c_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="dept != null">
        dept,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="workType != null">
        work_type,
      </if>
      <if test="workDate != null">
        work_date,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="feature != null">
        feature,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        #{dept,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="workType != null">
        #{workType,jdbcType=VARCHAR},
      </if>
      <if test="workDate != null">
        #{workDate,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if> 
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feature != null">
        #{feature,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cf.project.mybatis.model.CUserExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from c_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.dept != null">
        dept = #{record.dept,jdbcType=VARCHAR},
      </if>
       <if test="record.point != null">
        point = #{record.point,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_user
    set id = #{record.id,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=INTEGER},
      realname = #{record.realname,jdbcType=VARCHAR},
      dept = #{record.dept,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cf.project.mybatis.model.CUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
       <if test="point != null">
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="dept != null">
        dept = #{dept,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="workType != null">
        work_type = #{workType,jdbcType=VARCHAR},
      </if>
      <if test="workDate != null">
        work_date = #{workDate,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cf.project.mybatis.model.CUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
       point = #{point,jdbcType=INTEGER},
      realname = #{realname,jdbcType=VARCHAR},
      dept = #{dept,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      work_type = #{workType,jdbcType=VARCHAR},
      work_date = #{workDate,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  
  
  
  
  <!--根据user那么查询用户信息-->
  <select id="findUserByName" parameterType="java.lang.String" resultType="map">
    select
    <include refid="Base_Column_List" />
    from c_user where username = #{username} and state = 'T'
  </select>

  
  <select id="findByHDPagesh" parameterType="map" resultType="java.util.HashMap">
		    	SELECT
			cu.id,
			cu.username,
			date_format(
				cu.last_time,
				'%Y-%m-%d %H:%i:%s'
			) ltime,
			cu.realname,
			cu.remark,
			GROUP_CONCAT(sr.role_name SEPARATOR ',') rname,
			CASE cu.state
		WHEN 'T' THEN
			'禁用'
		WHEN 'F' THEN
			'启用'
		END state,sd.name
		FROM
		sys_department sd
		left join sys_department_user  sdu on sd.id=sdu.department_id
		LEFT JOIN	c_user cu ON sdu.user_id = cu.id
		LEFT JOIN sys_user_role sur ON cu.id = sur.user_id
		LEFT JOIN sys_role sr ON sur.role_id = sr.id
		AND sr.state = 'T'
		WHERE
		cu.state !='W' 
			and cu.id != '1' 
			and sd.id in (SELECT
	duser.department_id id
FROM
	sys_department_user duser,
	c_user cuser
WHERE
	EXISTS (
		SELECT
			dept.id
		FROM
            sys_department dept,
            (select getChildLst (#{departmentId,jdbcType=VARCHAR}) childList) t
        WHERE
            FIND_IN_SET(
                dept.id,
                childList
            )
		AND dept.id = duser.department_id
	)
and cuser.id=duser.user_id) 
		GROUP BY
			cu.id, sd.name
		ORDER BY
			cu.last_time


  </select>
  
    <select id="findByHDPage" parameterType="map" resultType="java.util.HashMap">
		    	SELECT
			cu.id,
			cu.username,
			date_format(
				cu.last_time,
				'%Y-%m-%d %H:%i:%s'
			) ltime,
			cu.realname,
			cu.remark,
			GROUP_CONCAT(sr.role_name SEPARATOR ',') rname,
			CASE cu.state
		WHEN 'T' THEN
			'禁用'
		WHEN 'F' THEN
			'启用'
		END state,sd.name
		FROM
		sys_department sd
		left join sys_department_user  sdu on sd.id=sdu.department_id
		LEFT JOIN	c_user cu ON sdu.user_id = cu.id
		LEFT JOIN sys_user_role sur ON cu.id = sur.user_id
		LEFT JOIN sys_role sr ON sur.role_id = sr.id
		AND sr.state = 'T'
		WHERE 
		<if test="aa != null and aa.length() &gt; 0">
		cu.state='W' and 
		</if>
		<if test="aa == null">
		cu.state!='W' and 
		</if>
			cu.id != '1' 
<if test="username != null and username.length() &gt; 0 ">
	and cu.username like concat('%',#{username},'%') 
</if>
<if test="realname != null and realname.length() &gt; 0 ">
	and cu.realname like concat('%',#{realname},'%') 
</if>
			and sd.id in (SELECT
	duser.department_id id
FROM
	sys_department_user duser,
	c_user cuser
WHERE
	EXISTS (
		SELECT
			dept.id
		FROM
			sys_department dept,
			(select getChildLst (#{departmentId,jdbcType=VARCHAR}) childList) t
		WHERE
			FIND_IN_SET(
				dept.id,
				childList
			)
		AND dept.id = duser.department_id
	)
and cuser.id=duser.user_id) 
		GROUP BY
			cu.id, sd.name
		ORDER BY
			cu.last_time


  </select>


<!-- 查询用户名称是否重复 -->
  <select id="findUsername" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from c_user where state = 'T' and username = #{name} 
		<if test="id != null and id.length() &gt; 0">
			 and id != #{id}
		</if>
  </select>
  
  <!-- 重置密码 -->
  <update id="updateById" parameterType="com.cf.project.mybatis.model.CUser">
    update c_user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR} and state = 'T'
  </update>
  
	<!--查询初始密码是否正确  -->  
	<select id="findBypwd" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) from c_user where state = 'T' and password = #{password}
		<if test="id != null and id.length() &gt; 0">
			 and id = #{id}
		</if>
  </select>
  
  <!-- 查询同一个学校名下管理人员是否有多个 -->
  <select id="findRepeatBySid" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(id) from c_user where dept = #{sid} 
		<if test="id != null and id.length() &gt; 0">
			 and id != #{id}
		</if>
  </select>
    <!-- 查询状态 -->
  <select id="findByPid" parameterType="java.lang.String" resultType="java.util.HashMap">
  		select state from c_user where id = #{id}
  </select>
  
  <!-- 修改状态F -->
  <update id="updateByPidF" parameterType="java.lang.String">
  		update c_user set state = 'F' where id = #{id}
  </update>
  
  <!-- 修改状态T -->
  <update id="updateByPidT" parameterType="java.lang.String">
  		update c_user set state = 'T' where id = #{id}
  </update>
    
  <!-- app用户登录 -->
  <select id="selectByUser" resultMap="BaseResultMap">
  		select * from c_user where username = #{username} 
  </select>
  
  <!-- 根据用户id查询用户对应的角色 -->
  <select id="findByRoleId" resultType="java.lang.String">
  		select * from c_user where username = #{username} 
  </select>
</mapper>