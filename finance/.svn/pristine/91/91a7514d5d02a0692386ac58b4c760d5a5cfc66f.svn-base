<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cf.project.mybatis.dao.CPlaceMapper">
  <resultMap id="BaseResultMap" type="com.cf.project.mybatis.model.CPlace">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
    <result column="verify" jdbcType="TIMESTAMP" property="verify" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, parent_id, sort, state, level, add_time, last_time ,verify
  </sql>
  <select id="selectByExample" parameterType="com.cf.project.mybatis.model.CPlaceExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from c_place
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from c_place
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from c_place
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.cf.project.mybatis.model.CPlaceExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from c_place
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cf.project.mybatis.model.CPlace">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') uuid from dual
    </selectKey>
    insert into c_place (id, name, parent_id, 
      sort, state, level, 
      add_time, last_time)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cf.project.mybatis.model.CPlace">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') uuid from dual
    </selectKey>
    insert into c_place
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
      <if test="verify != null">
        verify,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="verify != null">
        #{verify,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cf.project.mybatis.model.CPlaceExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from c_place
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_place
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastTime != null">
        last_time = #{record.lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_place
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      last_time = #{record.lastTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cf.project.mybatis.model.CPlace">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_place
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cf.project.mybatis.model.CPlace">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update c_place
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
      <select id="findTreeListByDepartment" parameterType="java.lang.String" resultType="java.util.HashMap">
  	  select 
			id,
			name,
			parent_id pId,
			sort,
			state,
			level le,
			'true' open
			 from c_place ORDER BY `level`,sort
  </select>
  
  <!-- 根据level或者parentId查询地点 -->
  <select id="findCplanceByParentIdORlevel" resultType="java.util.HashMap">
  	select id , name from c_place 
  	<where>
  		<if test="parentId != null and parentId != ''">
  			and parent_id = #{parentId}
  		</if>
  		<if test="level != null and level != ''">
  			and level = #{level}
  		</if>
  	</where>
  	ORDER BY name
  </select>
  
   <!-- 查询公司下的所有楼层 -->
  <select id="findFloorsList" resultType="java.util.HashMap">
  	  select p.id, p.name, p.parent_id, p.level, p.sort from c_place p where p.level = 2 and FIND_IN_SET(p.id, getPlaceChildLst('1'))  order by p.sort 
  </select>
  
   <!-- 查询公司下的所有会议室 -->
  <select id="findPlaceList" parameterType="map" resultType="java.util.HashMap">
  	  select p.id, p.name, p.parent_id, p.level, p.sort, device.cname dname, device.mac, device.last_time from c_place p left join c_device device on p.id = device.place_id and type = #{type} where FIND_IN_SET(p.id, getPlaceChildLst(#{parentId})) order by p.level, p.sort 
  </select>
  
   <!-- 查询公司下的所有楼层设备 -->
  <select id="findFloorList" parameterType="map" resultType="java.util.HashMap">
  	  select p.id, p.name, p.parent_id, p.level, p.sort, device.place_id, device.ip, device.cname dname, device.mac, device.last_time from c_place p left join c_device device on p.id = device.place_id and device.type=#{type} where p.level = 2 and FIND_IN_SET(p.id, getPlaceChildLst('1'))  order by p.sort  
  </select>

  <!-- 查询部门关联的会议室 -->
  <select id="findMeetingRoomByDeptId" parameterType="map" resultType="java.util.HashMap">
  	  select place.id, place.name pname, place.verify from c_place place, c_room_dept rdept where place.id = rdept.place_id and place.state = 'T' and rdept.dept_id = #{deptId}
  </select>
  
   <!-- 查询公司下的所有会议室 -->
  <select id="findMeetingRoomList" resultType="java.util.HashMap">
		select p.id, p.parent_id, p.name pname, p.verify from c_place p, c_place c where p.parent_id = c.id and p.level = 3 and p.state = 'T' and FIND_IN_SET(p.id, getPlaceChildLst('1')) order by c.sort, p.sort
  </select>
  
    <!-- 查询会议室下的会议时间 -->
  <select id="findMeetingByRoom" resultType="java.util.HashMap">
  	 select meeting.id, meeting.order_place_id, date_format(meeting.time_start,'%H:%i') timeStart, date_format(meeting.time_end,'%H:%i') timeEnd from c_meeting_order meeting where meeting.order_place_id = #{placeId} and date_format(meeting.time_start,'%Y-%m-%d') = #{meetingTime}
  </select>
  
    <!-- 查询所有会议室下的会议 -->
  <select id="findMeetingByAllRoom" resultType="java.util.HashMap">
  	 select p.id, p.name pname, meeting.meeting_name, v.state, date_format(meeting.time_start,'%H:%i') timeStart, date_format(meeting.time_end,'%H:%i') timeEnd from c_place p, c_meeting_order meeting left join c_meeting_verify v on meeting.id = v.meeting_id where p.id = meeting.order_place_id and p.level = 3 and meeting.state = 'T' and meeting.meeting_step != '0' and date_format(meeting.time_start,'%Y-%m-%d') = #{meetingTime} and FIND_IN_SET(p.id, getPlaceChildLst('1')) order by p.parent_id, meeting.time_start
  </select>
  
  
  <!-- 查询部门是否关联会议室 -->
  <select id="findRoomDeptCount" parameterType="map" resultType="java.lang.Integer">
      select count(rdept.id) c from c_room_dept rdept where rdept.dept_id = #{deptId}
  </select>

  <!-- 查询所有会议室 -->
  <select id="findAllCPlace" resultType="java.util.HashMap">
  		select b.id parentId ,
  			   b.name parentName ,
  			   a.id childId , 
  			   a.name childName 
  		from c_place a  
  			join c_place b on a.parent_id = b.id 
  				where a.level = 3 ORDER BY b.name ,a.name
  </select>
  <!-- 查询员工所在楼层 -->
    <select id="findlc" parameterType="map" resultType="java.util.HashMap">
		  		select b.id,b.name from c_user a LEFT JOIN c_place b on a.szlc=b.id where a.id=#{userid}
  </select>
</mapper>