package com.cf.project.mybatis.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

import com.cf.project.mybatis.model.SysDepartment;

public interface SysDepartmentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_department
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_department
     *
     * @mbg.generated
     */
    int insert(SysDepartment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_department
     *
     * @mbg.generated
     */
    int insertSelective(SysDepartment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_department
     *
     * @mbg.generated
     */
    SysDepartment selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_department
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(SysDepartment record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table sys_department
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(SysDepartment record);

	List<Map<String, Object>> findTreeList(Map<String, Object> map);
	
	List<Map<String, Object>> findETreeList(Map<String, Object> map);

	List<Map<String, Object>> findTreeListToJson(Map<String, Object> map);

	List<Map<String, Object>> findTreeListLevel1(Map<String, Object> map);
	
	List<Map<String, Object>> findTreeListLevel2(Map<String, Object> map);
	
	List<Map<String, Object>> findTreeListLevel3(Map<String, Object> map);
	
	List<Map<String, Object>> findTreeListLevel4(Map<String, Object> map);
	
	List<Map<String, Object>> findTreeListLevel5(Map<String, Object> map);

	Map<String, Object> selectByUserId(Map<String, Object> map);

	List<Map<String, Object>> selectByParentId(String depid);
	
	/**
	 * 通过pid获取ztree所需数据
	 * @param deptId
	 * @return
	 */
	List<Map<String, Object>> findDeptForZtree(String deptId);

	List<Map<String, Object>> findTreeListByDepartment(String departmentId);

	List<Map<String, Object>> finduserTreeListToJson(Map<String, Object> map);

	List<Map<String, Object>> findplaceTreeListToJson(Map<String, Object> map);
	/**
	 * 查詢一级部门
	 * @return
	 */
	@Select("select * from sys_department where level = '3'")
	List<Map<String, Object>> findSysDepartmentOne();
	/**
	 * 查詢二级部门
	 * @return
	 */
	@Select("select * from sys_department where parent_id = #{id}")
	List<Map<String, Object>> findSysDepartmentTwo(String id);
	
	/**
	 * 查询部门用户
	 * @param id
	 * @return
	 */
	@Select("select * from  c_user a  left join sys_department_user b  on  a.id = b.user_id where department_id =  #{id}")
	List<Map<String, Object>> findSysDepartmentUser(String id);
	/**
	 * 插入访客明细
	 * @param id
	 * @return
	 */
	
	//@Insert("insert into c_vistior (id, identity_card, vname, state, add_time, last_time ) values(#{id}, #{id}, #{identity_card}, #{vname}, 'T',#{add_time}, #{last_time})")
	//int saveVisitors(@Param("id")String id, @Param("pid")String pid,@Param("identity_card")String identity_card, @Param("vname")String vname, @Param("add_time")java.util.Date add_time, @Param("last_time")java.util.Date last_time);
	/**
	 * 插入访客
	 * @param id
	 * @param matter 
	 * @return
	 */
	@Insert("insert into c_visitor (id, wchat_id,  user_id, matter, state, add_time, last_time ) values(#{id},  #{weid},  #{userid}, #{matter}, 'E',#{add_time}, #{last_time})")
	int saveVisitors(@Param("id")String id, @Param("weid")String weid, @Param("userid")String userid, @Param("matter")String matter ,@Param("add_time")java.util.Date add_time, @Param("last_time")java.util.Date last_time);
	
	/**
	 * 查询访问记录
	 * @param weid
	 * @return
	 */
	@Select("select a.id ,date_format(a.add_time,'%Y-%m-%d %H:%i:%s') add_time,b.realname, case a.state when 'E' then '审核中' when 'P' then '审核通过'  when 'N' then '审核未通过' end state from c_visitor a LEFT JOIN c_user b on  a.user_id = b.id WHERE a.wchat_id=#{weid} order by a.add_time" )
	List<Map<String, Object>> findVisits(String weid);
	/**
	 * 
	 * @param uuidv 访客表id
	 * @param uuid  c_visitorid
	 * @param idcard 访客身份证
	 * @param vname 访客姓名
	 * @param imgUrl 
	 * @return
	 */
	@Insert("insert into c_visitor_user (id, visitor_id, user_card, user_name,img ) values(#{uuidv},  #{uuid},  #{idcard}, #{vname},#{imgUrl})")
	int saveVisitorUser(@Param("uuidv")String uuidv, @Param("uuid")String uuid, @Param("idcard")String idcard, @Param("vname")String vname, @Param("imgUrl")String imgUrl);

	@Select("select id from sys_department")
	List<String> findAllDeptId();

	List<Map<String, Object>> findldTreeListToJson(Map<String, Object> map);

	List<Map<String, Object>> findptygTreeListToJson(Map<String, Object> map);


}