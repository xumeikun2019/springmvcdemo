package com.cf.project.service.impl;

import java.util.List;
import java.util.Map;

import org.apache.shiro.authc.IncorrectCredentialsException;
import org.apache.shiro.authc.UnknownAccountException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cf.project.Constants;
import com.cf.project.mybatis.dao.CUserMapper;
import com.cf.project.mybatis.dao.WxRequestMapper;
import com.cf.project.security.UserRealm;
import com.cf.project.service.WxRequestService;
import com.cf.util.JsonResult;
import com.cf.util.MD5;

@Service
public class WxRequestServiceImpl implements WxRequestService {

	@Autowired
	UserRealm userRealm;

	@Autowired
	CUserMapper cUserMapper;

	@Autowired
	WxRequestMapper wxRequestMapper;

	@Override
	public Boolean sign(String user, String pwd, String openid) throws Exception {

		Map<String, Object> userMap = cUserMapper.findUserByName(user);
		Boolean sgin = false;
		String password = MD5.MD5(pwd + user);
		password = userRealm.md5(password, user);
		int result = 0;

		if (userMap == null) {
			// 用户名不存在抛出异常
			throw new UnknownAccountException();
		}
		String userPassWord = (String) userMap.get("password");
		if (!password.equals(userPassWord)) {
			throw new IncorrectCredentialsException();
		} else {

			result = cUserMapper.saveOpenid(openid, user);

		}
		if (result > 0) {
			sgin = true;

		}
		return sgin;
	}

	@Override
	public JsonResult findVisitByName(String user) {
		JsonResult jsonResult = new JsonResult();
		List<Map<String, Object>> list = wxRequestMapper.findVisitByName(user);
		//遍历主表 插入明细
		list.forEach(item -> {
			//访客表id
			String vid = (String) item.get("id");
			List<Map<String, Object>> listVisitor = wxRequestMapper.findVisitUserByName(vid);
			item.put("visitors", listVisitor);
		});

		jsonResult.setData(list);
		return jsonResult;
	}

	@Override
	public JsonResult updateVisitorStateById(String id, String state) {
		JsonResult jsonResult = new JsonResult();
		int result = wxRequestMapper.updateVisitorStateById(id, state); 
		if (result < 0) {
			jsonResult.setResult(Constants.OPERATION_FAIL);
		}
		return jsonResult;
	}
	
//	
//	@Override
//	public JsonResult updateVisitorStateFalseById(String id) {
//		JsonResult jsonResult = new JsonResult();
//		int result = wxRequestMapper.updateVisitorStateFalseById(id);
//		if (result < 0) {
//			jsonResult.setResult(Constants.OPERATION_FAIL);
//		}
//		return jsonResult;
//	}
	

}
