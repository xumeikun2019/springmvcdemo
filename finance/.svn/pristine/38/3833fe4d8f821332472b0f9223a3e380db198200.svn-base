package com.cf.project.mybatis.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

import com.cf.project.mybatis.model.CPlace;
import com.cf.project.mybatis.model.CPlaceExample;

public interface CPlaceMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    long countByExample(CPlaceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int deleteByExample(CPlaceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int insert(CPlace record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int insertSelective(CPlace record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    List<CPlace> selectByExample(CPlaceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    CPlace selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") CPlace record, @Param("example") CPlaceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") CPlace record, @Param("example") CPlaceExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(CPlace record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table c_place
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(CPlace record);

    List<Map<String, Object>> findByHDPage(Map<String, Object> map);
    
    /**
           * 查询公司下的所有会议室
     * @param map
     * @return
     */
    List<Map<String, Object>> findFloorsList(Map<String, Object> map);
    
    /**
            * 查询公司下的所有会议室
     * @param map
     * @return
     */
    List<Map<String, Object>> findPlaceList(Map<String, Object> map);
    
    /**
     * 查询公司下的所有楼层设备
     * @param map
     * @return
     */
    List<Map<String, Object>> findFloorList(Map<String, Object> map);
    
    /**
     * 查询部门关联的会议室
     * @param map
     * @return
     */
    List<Map<String, Object>> findMeetingRoomByDeptId(Map<String, Object> map);
    
    /**
             * 查询公司下的所有会议室
     * @return
     */
	List<Map<String, Object>> findMeetingRoomList();
	
	
	/**
	 * 查询会议室下的会议时间
	 * @return
	 */
	List<Map<String, Object>> findMeetingByRoom();
	
	/**
	 * 查询所有会议室下的会议
	 * @return
	 */
    List<Map<String, Object>> findMeetingByAllRoom(Map<String,Object> map);
	
	/**
	 * 查询部门是否关联会议室
	 * @param map
	 * @return
	 */
	int findRoomDeptCount(Map<String, Object> map);

	int selectCountByPrimaryKey(String id);

	List<Map<String, Object>> findTreeListByDepartment();

	List<Map<String, Object>> findCplanceByParentIdORlevel(Map<String, Object> map);

	List<Map<String, Object>> findAllCPlace();

	List<Map<String, Object>> findlc();

	List<Map<String, Object>> querylc(Map<String, Object> map);

	List<Map<String, Object>> findlc(@Param("userid") String userid);

	@Select("select id , name from c_place where level = 2 order by sort")
	List<Map<String, Object>> findCPlace();

	@Select("select b.state, a.id placeId, a.`name` placeName, a.parent_id parentId,a.`level`, b.meeting_name meetingName ,b.time_start timeStart ,b.time_end timeEnd from c_place a left join c_meeting_order b on a.id = b.order_place_id and b.state = 'T' and b.meeting_step=3 and b.time_start < #{currTime} and b.time_end > #{currTime} where a.`level` = '3' ORDER BY a.`name`")
	List<Map<String, Object>> findOrderAndMeeting(@Param("currTime")String currTime);
}