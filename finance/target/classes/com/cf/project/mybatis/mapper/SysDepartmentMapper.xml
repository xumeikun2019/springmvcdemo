<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cf.project.mybatis.dao.SysDepartmentMapper">
  <resultMap id="BaseResultMap" type="com.cf.project.mybatis.model.SysDepartment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="last_time" jdbcType="TIMESTAMP" property="lastTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, parent_id, sort, state, level, add_time, last_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_department
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from sys_department
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cf.project.mybatis.model.SysDepartment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into sys_department (id, name, parent_id, 
      sort, state, level, 
      add_time, last_time)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{addTime,jdbcType=TIMESTAMP}, #{lastTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cf.project.mybatis.model.SysDepartment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') uuid from dual
    </selectKey>
    insert into sys_department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="lastTime != null">
        last_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cf.project.mybatis.model.SysDepartment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_department
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastTime != null">
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cf.project.mybatis.model.SysDepartment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update sys_department
    set name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      last_time = #{lastTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="findTreeList" parameterType="map" resultType="java.util.HashMap">
    <!-- select id, parent_menucode pId, menu_name name from sys_authority where find_in_set(id, getChildLst(#{id})); -->
    select 
    id, name, parent_id pId, sort, state, level
    from sys_department where 1 = 1
    order by level,sort
  </select>
      <select id="findTreeListLevel1" parameterType="map" resultType="java.util.HashMap">
    select 
    id, name, parent_id pId, sort, state, level le
    from sys_department where 1 = 1
    order by level,sort
  </select>
        <select id="findTreeListLevel2" parameterType="map" resultType="java.util.HashMap">
    SELECT
	*
FROM
	(
		SELECT
			id,
			name,
			parent_id pId,
			sort,
			state,
			level le
		FROM
			sys_department
		WHERE
			1 = 1
		AND parent_id = #{id}
		UNION ALL
			SELECT
				sd2.id,
				sd2. name,
				sd2.parent_id pId,
				sd2.sort,
				sd2.state,
				sd2. level le
			FROM
				sys_department sd1
			LEFT JOIN sys_department sd2 ON sd1.id = sd2.parent_id
			AND sd2. level = '4'
			WHERE
				1 = 1
			AND sd1.parent_id = #{id}
			UNION ALL
				SELECT
					sd3.id,
					sd3.name,
					sd3.parent_id pId,
					sd3.sort,
					sd3.state,
					sd3.level le
				FROM
					sys_department sd1
				LEFT JOIN sys_department sd2 ON sd1.id = sd2.parent_id
				LEFT JOIN sys_department sd3 ON sd2.id = sd3.parent_id
				AND sd3. level = '5'
				WHERE
					1 = 1
				AND sd1.parent_id = #{id}
	) a
WHERE
	a.id IS NOT NULL
  </select>
  <select id="findTreeListLevel3" parameterType="map" resultType="java.util.HashMap">
    SELECT
	*
FROM
	(
		SELECT
			id,
			name,
			parent_id pId,
			sort,
			state,
			level le
		FROM
			sys_department
		WHERE
			1 = 1
		AND parent_id = 'dbe94d6586a511e9903600163e035f23'
		UNION ALL
			SELECT
				sd2.id,
				sd2. name,
				sd2.parent_id pId,
				sd2.sort,
				sd2.state,
				sd2. level le
			FROM
				sys_department sd1
			LEFT JOIN sys_department sd2 ON sd1.id = sd2.parent_id
			AND sd2. level = '5'
			WHERE
				1 = 1
			AND sd1.parent_id = 'dbe94d6586a511e9903600163e035f23'
	) a
WHERE
	a.id IS NOT NULL
  </select>
      <select id="findTreeListLevel4" parameterType="map" resultType="java.util.HashMap">
    select 
    id, name, parent_id pId, sort, state, level le
    from sys_department where 1 = 1 and parent_id = #{id}
    order by level,sort
  </select>
      <select id="findTreeListLevel5" parameterType="map" resultType="java.util.HashMap">
    select 
    id, name, parent_id pId, sort, state, level le
    from sys_department where 1 = 1 and id = #{id}
    order by level,sort
  </select>
   <select id="findTreeListToJson" parameterType="map" resultType="java.util.HashMap">
    <!-- select id, parent_menucode pId, menu_name name from sys_authority where find_in_set(id, getChildLst(#{id})); -->
   select 
    id value, name title, case  when parent_id is NULL THEN 'null'  else parent_id  end pid
    from sys_department where 1 = 1 AND state = 'T'
    order by level,sort
  </select>
  <select id="finduserTreeListToJson" parameterType="map" resultType="java.util.HashMap">
    <!-- select id, parent_menucode pId, menu_name name from sys_authority where find_in_set(id, getChildLst(#{id})); -->
   select 
    id value, name title, case  when parent_id is NULL THEN 'null'  else parent_id  end pid
    from sys_department where 1 = 1 AND state = 'T'
	UNION
	select b.id value,b.realname title,a.department_id pid from sys_department_user a,c_user b where a.user_id=b.id
  </select>
  <!-- 领导树 -->
    <select id="findldTreeListToJson" parameterType="map" resultType="java.util.HashMap">
    <!-- select id, parent_menucode pId, menu_name name from sys_authority where find_in_set(id, getChildLst(#{id})); -->
   select 
    id value, name title, case  when parent_id is NULL THEN 'null'  else parent_id  end pid
    from sys_department where 1 = 1 AND state = 'T'
	UNION 
	select b.id value,b.realname title,a.department_id pid from sys_department_user a,c_user b,sys_user_role c where a.user_id=b.id and b.id=c.user_id and c.role_id='bad9386500fa11ea875400e081bbbd32'
  </select>
  <!-- 普通员工树 -->
    <select id="findptygTreeListToJson" parameterType="map" resultType="java.util.HashMap">
    <!-- select id, parent_menucode pId, menu_name name from sys_authority where find_in_set(id, getChildLst(#{id})); -->
   select 
    id value, name title, case  when parent_id is NULL THEN 'null'  else parent_id  end pid
    from sys_department where 1 = 1 AND state = 'T'
	UNION 
	select b.id value,b.realname title,a.department_id pid from sys_department_user a,c_user b,sys_user_role c,(select aa.id , aa.realname,bb.role_id from c_user aa LEFT JOIN sys_user_role bb on aa.id=bb.user_id where bb.role_id='bad9386500fa11ea875400e081bbbd32' ) d 
	where a.user_id=b.id and b.id=c.user_id and d.id!=b.id
  </select>
   <select id="findplaceTreeListToJson" parameterType="map" resultType="java.util.HashMap">
    <!-- select id, parent_menucode pId, menu_name name from sys_authority where find_in_set(id, getChildLst(#{id})); -->
   select id value,name title,case  when parent_id is NULL THEN 'null'  else parent_id  end pid from c_place
  </select>
      <select id="findETreeList" parameterType="java.lang.String" resultType="java.util.HashMap">
    <!-- select id, parent_menucode pId, menu_name name from sys_authority where find_in_set(id, getChildLst(#{id})); -->
<!--     (SELECT
	id,
	NAME label,
	parent_id pid,
	sort,
	LEVEL mlevel,'0' usid
FROM
	sys_department
WHERE
	1 = 1
ORDER BY
	level,
	sort)
UNION ALL
(SELECT
	cu.id,cu.realname label,cdu.department_id pid,0 sort,0 mlevel,'1' usid
FROM
	sys_department_user cdu
LEFT JOIN c_user cu ON cdu.user_id = cu.id) -->
    (SELECT
	id,
	NAME label,
	parent_id pid,
	sort,
	LEVEL mlevel,'0' usid
FROM
	sys_department 
WHERE
		FIND_IN_SET(
		id,
		getChildLst (
			#{pid}
		)
	)
and id is not null
ORDER BY
	level,
	sort)
UNION ALL
(SELECT
	cu.id,cu.realname label,cdu.department_id pid,0 sort,0 mlevel,'1' usid
FROM
	sys_department_user cdu
LEFT JOIN c_user cu ON cdu.user_id = cu.id where cu.id is not null)
  </select>
    <select id="selectByUserId" parameterType="map" resultType="java.util.HashMap">
		SELECT
			sd.id,
			sd. name,
			sd.parent_id pId,
			sd.sort,
			sd.state,
			sd.level
		FROM
			sys_department sd
		RIGHT JOIN sys_department_user sdu ON sd.id = sdu.department_id
		WHERE
			1 = 1
		AND sdu.user_id = #{userid,jdbcType=VARCHAR}
		ORDER BY
			level,
			sort
  </select>
   <select id="selectByParentId" parameterType="java.lang.String" resultType="map">
  		 <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from sys_department
    where parent_id = #{parentid,jdbcType=VARCHAR}
  </select>
  
  <select id="findDeptForZtree" parameterType="java.lang.String" resultType="map">
  	  select id, parent_id pId, name from sys_department where FIND_IN_SET(id, getChildLst(#{pid}));
  </select>
    <select id="findTreeListByDepartment" parameterType="java.lang.String" resultType="java.util.HashMap">
  	  select 
			id,
			name,
			parent_id pId,
			sort,
			state,
			level le,
			'true' open
			 from sys_department where FIND_IN_SET(id, getChildLst(#{departmentId}));
  </select>
  
</mapper>